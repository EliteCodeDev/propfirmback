{
  "name": "NUEVO METADATA - REDIS",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 3
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -3664,
        -24
      ],
      "id": "b89e5560-ca77-4814-b640-42b470652c3c",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-globals.globalConstants",
      "typeVersion": 1,
      "position": [
        -3440,
        -24
      ],
      "id": "254165e7-c1d7-4851-81ce-160b2d59cb0b",
      "name": "Global Constants",
      "credentials": {
        "globalConstantsApi": {
          "id": "xD5yrF0WiFvNSDFv",
          "name": "Global Constants account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {\n      \"metrics\":{{JSON.stringify($('Edit Fields1').item.json.metrics) }},\n    \"broker_account\":{{ JSON.stringify($('Split Out1').item.json.broker_account)}},\n    \"challenge_stages\":{{ JSON.stringify($('Split Out1').item.json.metadata.challenge_stages) }},\n    \"stage_parameters\":{{ JSON.stringify($('Split Out1').item.json.metadata.stage_parameters) }}\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        368,
        -416
      ],
      "id": "fc76623f-b82a-4a9e-b3b1-e726a61df12f",
      "name": "Construir data",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let data;\n\ntry {\n  // Intentamos leer del nodo \"Actualizar Broker account\"\n  const id1 = $('Construir data').item.json.data;\n  // Si existe, guardamos esos datos\n  if (id1) {\n    data = id1;\n  }\n} catch (error) {\n  // Si falla, significa que no se ejecutó o no tenía esos datos\n  // Podemos dejarlo pasar o hacer un console.log(error)\n}\n\ntry {\n  // Intentamos leer del nodo \"Obtener Broker Account\"\n  const id2 = $('Edit Fields').item.json.data;\n  // Si existe, guardamos esos datos\n  if (id2) {\n    data = id2;\n  }\n} catch (error) {\n  // Igualmente, si falla, es porque no se ejecutó.\n}\n\n// Al final devolvemos lo que hayamos encontrado\nreturn { data };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        -320
      ],
      "id": "fcdbb097-a127-4396-8793-06066a61f13c",
      "name": "Escoger Data"
    },
    {
      "parameters": {
        "url": "={{ $('Global Constants').item.json.constants.API_INTERNAL_URL }}/challenge-relations/{{ $('Split Out1').item.json.challenge_relation.documentId }}?populate=challenge_stages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        -224
      ],
      "id": "602f7240-81fe-419b-b12a-924fdc9a744f",
      "name": "Obtener Relation",
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('Global Constants').item.json.constants.API_INTERNAL_URL }}/stage-parameters?populate=*&filters[challenge_relation][id]={{ $('Split Out1').item.json.challenge_relation.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        144,
        -224
      ],
      "id": "9e015701-cc89-4989-ba6a-7058e7afca50",
      "name": "Obtener Parámetros",
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {\n      \"metrics\":{{JSON.stringify($('metaStats').item.json.metrics)  }},\n      \"broker_account\":{{ JSON.stringify($('Split Out1').item.json.broker_account)}},\n    \"challenge_stages\":{{ JSON.stringify($('Obtener Relation').item.json.data.challenge_stages) }},\n    \"stage_parameters\":{{ JSON.stringify($json.data) }}\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        368,
        -224
      ],
      "id": "c98acd73-4e4c-4415-a13a-33cc5801ae0c",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $('Global Constants').item.json.constants.API_INTERNAL_URL }}/challenges/{{ $('Split Out1').item.json.documentId }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"data\": {\n    \"metadata\":{{ JSON.stringify($json.data) }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        816,
        -320
      ],
      "id": "981a68d8-c5ca-4903-8722-9bdc47ec3a6c",
      "name": "Actualizar Metadata",
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "token",
        "operation": "getAll",
        "contentType": "=challenges?populate=*&filters[isactive][$eq]=true",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.strapi",
      "typeVersion": 1,
      "position": [
        -2992,
        -24
      ],
      "id": "f1c31a5f-56ef-47c5-9358-b58907f7e307",
      "name": "Split Out1",
      "executeOnce": false,
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $('Global Constants').item.json.constants.API_INTERNAL_URL }}/challenges/{{ $('Split Out1').item.json.documentId }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"data\":{\n      \"validation_rules\":{{ JSON.stringify($('Edit Fields1').item.json.userRules) }}\n  }\n} ",
        "options": {
          "batching": {
            "batch": {
              "batchInterval": 2000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -304,
        -112
      ],
      "id": "f0679ee8-bec8-4aa3-aded-b28ac7f387cb",
      "name": "Actualizar User Rules",
      "retryOnFail": false,
      "executeOnce": false,
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Edit Fields1').item.json.metrics && $('Split Out1').item.json.metadata ? true : false }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "75efc729-f6eb-4d34-b8cc-6d13e6e3fb19"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8720a783-06f7-4728-9505-878b475f3551",
                    "leftValue": "={{ $('Edit Fields1').item.json.metrics}}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cbaedb4b-00a7-4eb2-820d-56a1c31135a6",
                    "leftValue": "={{  $('Split Out1').item.json.metadata }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -304,
        -336
      ],
      "id": "e72c9490-3cbb-42d5-938a-c9eb12e48b48",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $('Global Constants').item.json.constants.API_INTERNAL_URL }}/challenges/{{ $json.documentId }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"data\": {\n    \"result\": \"progress\",\n    \"startDate\": \"{{ new Date().toISOString() }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1872,
        -24
      ],
      "id": "8400a1d3-84c0-4554-a16f-f594d4dba3af",
      "name": "Iniciar challenge",
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "17fae6a4-a577-440d-94d9-650e8b04bc02",
              "leftValue": "={{$json.result}}",
              "rightValue": "init",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2320,
        -24
      ],
      "id": "c6d9290e-d822-4b15-9f3d-5cfaa8578ad9",
      "name": "Filter2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Global Constants').item.json.constants.BROKERET_API_URL }}position/list/closed",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"flag\":1,\n    \"Login\": [{{ $('Filter3').item.json.broker_account.login }}],\n    \"FromDate\": \"{{ $('Obtener Fecha').item.json.startDate.toDateTime().format('dd/MM/yyyy') }}\",\n    \"ToDate\": \"{{ $('Obtener Fecha').item.json.endDate.toDateTime().format('dd/MM/yyyy') }}\",\n    \"fromTime\": \"00:00:00\",\n    \"toTime\": \"23:59:59\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2320,
        168
      ],
      "id": "6ca03e9f-c38b-4015-bb28-9f197fb7ae19",
      "name": "Close Positions",
      "retryOnFail": false,
      "executeOnce": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "CUmhCN5pQF3kPclc",
          "name": "BROKERET API 1.0"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {\n    \"login\": \"{{ $('Filter3').item.json.broker_account.login }}\",\n    \"success\": true,\n    \"summary\": {\n      \"totalOpenTrades\": {{ $('Open Positions').item.json.result.total_Trades || 0 }},\n      \"totalClosedTrades\": {{ $('Close Positions').item.json.result.total_Trades || 0 }},\n      \"lastUpdate\": \"{{ new Date().toISOString() }}\"\n    },\n    \"openPositions\": {\n      \"positions\": {{ $('Open Positions').item.json.result.openPositionModel || [] }}\n    },\n    \"closedPositions\": {\n      \"positions\": {{ $('Close Positions').item.json.result.closedPositions || [] }}\n    },\n    \"orders\":{{ $json.result }}\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1424,
        168
      ],
      "id": "43caa1e6-cf86-49ef-941b-3b0a71797b3b",
      "name": "MetaAdmin"
    },
    {
      "parameters": {
        "url": "={{ $('Global Constants').item.json.constants.BROKERET_API_URL }}order/list/user",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"login\": {{ $('Filter3').item.json.broker_account.login }},\n    \"FromDate\": \"{{ $('Obtener Fecha').item.json.startDate.toDateTime().format('dd/MM/yyyy') }}\",\n    \"ToDate\": \"{{ $('Obtener Fecha').item.json.endDate.toDateTime().format('dd/MM/yyyy') }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1648,
        168
      ],
      "id": "3d520fab-f111-4df2-be79-a02d820baec1",
      "name": "Orders",
      "executeOnce": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "CUmhCN5pQF3kPclc",
          "name": "BROKERET API 1.0"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ $('Global Constants').item.json.constants.BROKERET_API_URL }}position/list/open",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"flag\": 1,\n    \"Login\": [{{ $('Filter3').item.json.broker_account.login }}]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1872,
        168
      ],
      "id": "203858aa-359d-48e9-aa56-03bcd76a5180",
      "name": "Open Positions",
      "executeOnce": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "CUmhCN5pQF3kPclc",
          "name": "BROKERET API 1.0"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "\nconst to = new Date();\nto.setDate(to.getDate() + 1);   // (YYYY-MM-DD)\nconst startDate = new Date(0).toISOString().split('T')[0];\nconst endDate = to.toISOString().split('T')[0];\n\nreturn {\n  startDate: startDate,\n  endDate: endDate\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3216,
        -24
      ],
      "id": "309d8f1c-84bf-48ad-a038-aad9562f2423",
      "name": "Obtener Fecha"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "49636714-70ca-47a6-abe4-c6f14fcec00e",
              "leftValue": "={{ $json.broker_account }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2544,
        -24
      ],
      "id": "fdad9c5b-b85a-4bc7-955d-7c83330281aa",
      "name": "Filter3"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $('Global Constants').item.json.constants.API_INTERNAL_URL }}/challenges/{{ $('Split Out1').item.json.documentId }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"data\":{\n      \"dataAdmin\":{{ JSON.stringify($json.data)}}\n  }\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1200,
        168
      ],
      "id": "48d66b91-3672-4740-b185-f81eab60c7a8",
      "name": "Actualizar DataAdmin",
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Global Constants').item.json.constants.BROKERET_API_URL }}stats/user ",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "login",
              "value": "={{ $('Filter3').item.json.broker_account.login }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2320,
        -208
      ],
      "id": "db0fbed7-2e07-4867-be03-6b73b68e2c61",
      "name": "User Stats",
      "notesInFlow": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "CUmhCN5pQF3kPclc",
          "name": "BROKERET API 1.0"
        }
      },
      "onError": "continueErrorOutput",
      "notes": "dias operando\n"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Global Constants').item.json.constants.BROKERET_API_URL }}Risk/total/score",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "login",
              "value": "={{ $('Filter3').item.json.broker_account.login }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1872,
        -216
      ],
      "id": "3182bc24-d48e-4181-b9ce-ce0c59d67c2b",
      "name": "User total risk",
      "notesInFlow": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "CUmhCN5pQF3kPclc",
          "name": "BROKERET API 1.0"
        }
      },
      "notes": "dias operando\n"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Global Constants').item.json.constants.BROKERET_API_URL }}Risk/today/score",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "login",
              "value": "={{ $('Filter3').item.json.broker_account.login }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1648,
        -216
      ],
      "id": "0b0e8567-c3b9-46d9-bedd-470b3317887f",
      "name": "User today risk",
      "notesInFlow": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "CUmhCN5pQF3kPclc",
          "name": "BROKERET API 1.0"
        }
      },
      "notes": "dias operando\n"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Global Constants').item.json.constants.BROKERET_API_URL }}stats/prop",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"TuModelName\",\n  \"logins\": [{{ $('Filter3').item.json.broker_account.login }}]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1424,
        -216
      ],
      "id": "3e71d8fc-ad62-4c75-ab29-5bafdf658b45",
      "name": "User Props",
      "notesInFlow": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "CUmhCN5pQF3kPclc",
          "name": "BROKERET API 1.0"
        }
      },
      "notes": "dias operando\n"
    },
    {
      "parameters": {
        "url": "={{ $('Global Constants').item.json.constants.BROKERET_API_URL }}user/get",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"login\":{{ $('Filter3').item.json.broker_account.login }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1200,
        -216
      ],
      "id": "7f2b2304-b103-4255-813c-aee6efa41b5e",
      "name": "User Account",
      "notesInFlow": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "CUmhCN5pQF3kPclc",
          "name": "BROKERET API 1.0"
        }
      },
      "onError": "continueErrorOutput",
      "notes": "dias operando\n"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -752,
        -216
      ],
      "id": "d158dd5c-300d-4ca5-8e25-2ece34bf98b1",
      "name": "Merge1"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"metrics\": {{ $json.metrics }},\n  \"userRules\": {{ $json.userRules }},\n  \"success\":true\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -528,
        -216
      ],
      "id": "69c1af43-8a82-402f-a72f-4f4603c2dbdf",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"metrics\": {\n    \"general\":{{ $('User Props').item.json.result[0] || {} }},\n    \"today\":{{ $('User today risk').item.json.result || {} }},\n    \"total\":{{ $('User total risk').item.json.result || {} }},\n    \"stats\":{{ $('User Stats').item.json.result || {} }}\n}\n}\n ",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -976,
        -312
      ],
      "id": "ffb7cc4c-8afc-4ac2-8c93-aa818fd280e6",
      "name": "metaStats"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4ac327dd-96cf-4411-8963-940b383b5af5",
              "leftValue": "={{ $json.broker_account.login }}",
              "rightValue": "84454",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2768,
        -24
      ],
      "id": "5060da43-7d65-4da2-9772-56c84a7bad58",
      "name": "Filter",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a8092e06-c4bb-4472-9bcb-af182f85ad53",
              "name": "userRules.maxDrawdownRelative",
              "value": "={{ $('User Props').item.json.result[0].max_Draw_Down_Initial_Balance_Percentage }}",
              "type": "number"
            },
            {
              "id": "7e031640-151b-47e5-b6c1-5d6d0ef69f16",
              "name": "userRules.maxDrawdownAbsolute",
              "value": "={{ $('User Props').item.json.result[0].max_Draw_Down_Initial_Balance_Amount }}",
              "type": "number"
            },
            {
              "id": "1ee37c84-53ed-4404-99e5-854ade87272c",
              "name": "userRules.maxLossPerTradeRelative",
              "value": "={{ $('User Props').item.json.result[0].max_Loss_Per_Trade }}",
              "type": "number"
            },
            {
              "id": "483f09af-91d7-4883-86ea-eb95bd3fecba",
              "name": "userRules.balance",
              "value": "={{ $('User Props').item.json.result[0].balance }}",
              "type": "number"
            },
            {
              "id": "208b45c5-d29e-42f7-a8a5-b01b4b221547",
              "name": "userRules.tradingDays",
              "value": "={{ $('User Stats').item.json.result.tradingDays }}",
              "type": "number"
            },
            {
              "id": "da6a2931-17cb-4088-b2fd-0148ed62b10c",
              "name": "userRules.maxBalance",
              "value": "={{ $('User Stats').item.json.result.max_Balance }}",
              "type": "number"
            },
            {
              "id": "e736f4fd-2303-43f5-8630-77c2e572b2d1",
              "name": "userRules.dailyLossRelative",
              "value": "={{ $('User Props').item.json.result[0].daily_Draw_Down_Percentage }}",
              "type": "number"
            },
            {
              "id": "a0a5f544-48cf-46b7-823a-b21ca47c1c66",
              "name": "userRules.dailyLossAbsolute",
              "value": "={{ $('User Props').item.json.result[0].daily_Draw_Down_Amount }}",
              "type": "number"
            },
            {
              "id": "54faa2fb-e21b-4b7a-87ae-c88aec770936",
              "name": "userRules.numTrades",
              "value": "={{ $('User total risk').item.json.result.total_Trades }}",
              "type": "number"
            },
            {
              "id": "d3e56e68-4c32-44c4-8674-142eb0e0be88",
              "name": "userRules.profit",
              "value": "={{$('User Stats').item.json.result.total_PNL}}",
              "type": "number"
            },
            {
              "id": "fadc8253-f042-4aee-aec7-d1258388db58",
              "name": "userRules.equity",
              "value": "={{ $('User Props').item.json.result[0].current_Equity }}",
              "type": "number"
            },
            {
              "id": "e29c1932-9f71-4743-84ce-c6492c4c08c0",
              "name": "userRules.lastAccess",
              "value": "={{ $json.result.lastAccess }}",
              "type": "string"
            },
            {
              "id": "523a1ea9-a02d-42e7-a4ae-6ef13677a791",
              "name": "userRules.lastIp",
              "value": "={{ $json.result.lastIP }}",
              "type": "string"
            },
            {
              "id": "4c100002-dd63-4fbc-ae5c-5fe13df42a23",
              "name": "userRules.totalProfit",
              "value": "={{ $('User total risk').item.json.result.total_Profit }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -976,
        -120
      ],
      "id": "6d2a90b0-aec0-426a-a3fb-466cfef4bf73",
      "name": "User Rules"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92d89930-8a53-4c72-ac08-8be0dc31227c",
              "leftValue": "={{ $('Split Out1').item.json.metadata.metrics.total.total_Trades }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            },
            {
              "id": "d5e561f1-f71a-415c-8933-eac173db28e6",
              "leftValue": "={{ $('Split Out1').item.json.metadata.metrics.today.total_Trades }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2096,
        -24
      ],
      "id": "36259508-5581-4bee-985b-766c42dab07a",
      "name": "Filter1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "369719c2-3139-46c8-8bf6-f5c8635bfba5",
              "leftValue": "={{ $json.result.name }}",
              "rightValue": "ERR",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2096,
        -216
      ],
      "id": "71af6945-297e-498e-b57b-24b1a3b3c916",
      "name": "Filter4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "369719c2-3139-46c8-8bf6-f5c8635bfba5",
              "leftValue": "={{ $json.messages[0] }}",
              "rightValue": "=No",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2096,
        168
      ],
      "id": "82cc8a45-5671-4160-9905-6837b3229338",
      "name": "Filter5"
    }
  ],
  "pinData": {
    "Schedule Trigger": [
      {
        "json": {
          "timestamp": "2025-06-25T23:20:34.003-04:00",
          "Readable date": "June 25th 2025, 11:20:34 pm",
          "Readable time": "11:20:34 pm",
          "Day of week": "Wednesday",
          "Year": "2025",
          "Month": "June",
          "Day of month": "25",
          "Hour": "23",
          "Minute": "20",
          "Second": "34",
          "Timezone": "America/New_York (UTC-04:00)"
        }
      }
    ]
  },
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Global Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Global Constants": {
      "main": [
        [
          {
            "node": "Obtener Fecha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Construir data": {
      "main": [
        [
          {
            "node": "Escoger Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Escoger Data": {
      "main": [
        [
          {
            "node": "Actualizar Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Relation": {
      "main": [
        [
          {
            "node": "Obtener Parámetros",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Parámetros": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Escoger Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar Metadata": {
      "main": [
        []
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Construir data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Obtener Relation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Iniciar challenge": {
      "main": [
        []
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MetaAdmin": {
      "main": [
        [
          {
            "node": "Actualizar DataAdmin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Fecha": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter3": {
      "main": [
        [
          {
            "node": "Close Positions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          },
          {
            "node": "User Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open Positions": {
      "main": [
        [
          {
            "node": "Orders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Orders": {
      "main": [
        [
          {
            "node": "MetaAdmin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Close Positions": {
      "main": [
        [
          {
            "node": "Filter5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User Stats": {
      "main": [
        [
          {
            "node": "Filter4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User total risk": {
      "main": [
        [
          {
            "node": "User today risk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User today risk": {
      "main": [
        [
          {
            "node": "User Props",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User Props": {
      "main": [
        [
          {
            "node": "User Account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User Account": {
      "main": [
        [
          {
            "node": "metaStats",
            "type": "main",
            "index": 0
          },
          {
            "node": "User Rules",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "metaStats": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Actualizar User Rules",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar User Rules": {
      "main": [
        []
      ]
    },
    "Actualizar DataAdmin": {
      "main": [
        []
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Filter3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User Rules": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Iniciar challenge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter5": {
      "main": [
        [
          {
            "node": "Open Positions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter4": {
      "main": [
        [
          {
            "node": "User total risk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ca578652-0e28-4b6c-a191-d91950438628",
  "meta": {
    "instanceId": "d0b8380c1a3e2712eb6c23ae22f9d552bfc10da049104d6d97b851843a40a962"
  },
  "id": "FVfFBIsVwEK03YMr",
  "tags": []
}